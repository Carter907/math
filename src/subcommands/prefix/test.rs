use rand::prelude::*;static PREFIXES: [(&str, i8); 20] = [    ("yocto", -24),    ("zepto", -21),    ("atto", -18),    ("femto", -15),    ("pico", -12),    ("nano", -9),    ("micro", -6),    ("milli", -3),    ("centi", -2),    ("deci", -1),    ("deca", 1),    ("hecto", 2),    ("kilo", 3),    ("mega", 6),    ("giga", 9),    ("tera", 12),    ("peta", 15),    ("exa", 18),    ("zetta", 21),    ("yotta", 24),];fn test(cheat_sheet: bool, test: bool) {    if cheat_sheet {        for (prefix, pow) in PREFIXES {            println!("{:10} -> {:3}", prefix, pow);        }    } else if test {        let mut input = "".to_string();        loop {            let mut rng = thread_rng();            let i = rng.gen_range(0..PREFIXES.len());            let prefix = PREFIXES[i];            println!(                "What is the exponent of magnitude in the following prefix?\n{}",                prefix.0            );            input = "".to_string();            std::io::stdin()                .read_line(&mut input)                .expect("attempting to read line from user");            if input.trim() == "q" {                println!("exiting...");                std::process::exit(0);            }            let answer: i8 = input                .trim()                .parse()                .expect("please enter a valid i8 number");            if answer == prefix.1 {                println!("✅");            } else {                println!("❌ [correct answer: {}]", prefix.1);            }        }    }}